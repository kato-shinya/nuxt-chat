rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth.uid != null;
    }

    function isUserAuth(userId) {
      return request.auth.uid == userId
    }

    function require(param){
      return request.resource.data[param] != null
    }

    function isNotEmpty(param){
      return require(param)
              && request.resource.data[param] is string
              && request.resource.data[param].trim().size() != 0;
    }
    
    match /users/{userId} {
    allow get : if isAuth();
    allow create: if isUserAuth(userId)
                  && isNotEmpty("name")
                  && isNotEmpty("iconImageUrl");
    }

    // This rule allows anyone on the internet to view, edit, and delete
    // all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // your app will lose access to your Firestore database
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2020, 5, 29);
    }
  }
}